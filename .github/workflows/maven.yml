# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn --file /home/ec2-user/actions-runner/_work/HotelRegistar/HotelRegistar/userService/pom.xml clean install -DskipTests

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Run the application
      run: java -jar -DAWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} -DAWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} -DDB_PASSWORD=${{ secrets.DB_PASSWORD }} -DDB_USERNAME=${{ secrets.DB_USERNAME }} -DJWT_SECRET=${{ secrets.JWT_SECRET }} -DSSL_PASSWORD=${{ secrets.SSL_PASSWORD }} /home/ec2-user/actions-runner/_work/HotelRegistar/HotelRegistar/userService/target/userService-0.0.1-SNAPSHOT.jar > application.log 2>&1 &
